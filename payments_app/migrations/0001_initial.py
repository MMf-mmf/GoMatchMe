# Generated by Django 5.1.2 on 2024-11-01 01:30

import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FeatureDonation',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('feature_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('goal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Inactive')], default=0)),
            ],
            options={
                'verbose_name': 'Feature Donation',
                'verbose_name_plural': 'Feature Donations',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='BountyOrder',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('paid', models.BooleanField(default=False)),
                ('paid_in_full', models.BooleanField(default=False)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('was_pledge_added', models.BooleanField(default=False, help_text='was the pledge added to the to_users bounty, this can change from true to false if the subscription is cancelled')),
                ('amount_paid_so_far', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='this is the amount of the pledge that has been paid so far, this will be incremented every time a pledge fee is charged and should be paid in full when the match takes place', max_digits=10)),
                ('stripe_payment_intent', models.CharField(blank=True, help_text='The stripe payment intent id that is returned in the webhook when a payment is successful', max_length=255, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, help_text='The stripe subscription id that is returned in the webhook when a payment is successful', max_length=255, null=True)),
                ('stripe_checkout_session_id', models.CharField(blank=True, help_text='when payment is the first of a subscription, the first payment id is returned in the webhook and saved here', max_length=255, null=True)),
                ('stripe_invoice_id', models.CharField(blank=True, help_text='The stripe invoice id that is returned in the webhook when a payment is successful', max_length=255, null=True)),
                ('refund_date', models.DateTimeField(blank=True, null=True)),
                ('recurring_payment', models.BooleanField(blank=True, default=False, null=True)),
                ('number_of_months', models.PositiveIntegerField(blank=True, help_text='The number of months the user wants to pay this amount consecutively', null=True)),
                ('recurring_payment_expiration_date', models.DateField(blank=True, null=True)),
                ('is_subscription_active', models.BooleanField(blank=True, default=False, null=True)),
                ('bounty_status', models.IntegerField(choices=[(0, 'Active'), (1, 'Paid In Full'), (2, 'Cancelled By User'), (3, 'Cancelled By Admin'), (4, 'On Hold, Payment Failed')], default=0)),
                ('from_user', models.ForeignKey(blank=True, help_text='The user that the bounty is being added from, he is paying for the bounty', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(blank=True, help_text='The user that bounty is being added to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bounty_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='BountySubscriptionTransaction',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invoice_id', models.CharField(blank=True, help_text='The stripe invoice id that is returned in the webhook when a payment is successful', max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='The amount paid on this invoice not including tax, we want the amount that is added to the users account', max_digits=10)),
                ('payment_method', models.CharField(blank=True, help_text='The payment method used to pay this invoice', max_length=255, null=True)),
                ('price_object_id', models.CharField(blank=True, help_text='stripe uses a price object holds the price amount, the subscription gets its amount from the price object', max_length=255, null=True)),
                ('refund_date', models.DateTimeField(blank=True, null=True)),
                ('billing_reason', models.CharField(blank=True, help_text='what on stripes end caused the billing to happen', max_length=255, null=True)),
                ('collection_method', models.CharField(blank=True, help_text='how the payment was collected (such as automatic or manual)', max_length=255, null=True)),
                ('event_id', models.CharField(blank=True, help_text='every stripe event that is called to our webhook has a id or event_id, which can be used to look up the full event on stripe if needed', max_length=255, null=True)),
                ('bounty_order', models.ForeignKey(blank=True, help_text='The bounty order that the subscription is for', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bounty_order_transactions', to='payments_app.bountyorder')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('email', models.EmailField(max_length=254)),
                ('paid', models.BooleanField(default=False)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_checkout_session_id', models.CharField(blank=True, help_text='The Stripe checkout session ID that is created for a checkout session', max_length=255, null=True)),
                ('stripe_payment_intent', models.CharField(blank=True, help_text='The Stripe payment intent ID that is returned in the webhook when a payment is successful', max_length=255, null=True)),
                ('stripe_invoice_id', models.CharField(blank=True, help_text='The Stripe invoice ID that is returned in the webhook when a payment is successful', max_length=255, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=255, null=True)),
                ('recurring_payment', models.BooleanField(blank=True, default=False, null=True)),
                ('number_of_months', models.PositiveIntegerField(blank=True, help_text='The number of months the user wants to pay this amount consecutively', null=True)),
                ('refund_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Cancelled'), (2, 'Subscription Payment Failed'), (3, 'Cancelled, Subscription Payment Failed'), (4, 'Cancelled By Admin')], default=0)),
                ('from_user', models.ForeignKey(blank=True, help_text='The user that the donation is being added from', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('feature_donation', models.ForeignKey(blank=True, help_text='The feature donation this donation is associated with', null=True, on_delete=django.db.models.deletion.CASCADE, to='payments_app.featuredonation')),
            ],
            options={
                'verbose_name': 'Donation',
                'verbose_name_plural': 'Donations',
                'ordering': ['-created'],
            },
        ),
    ]
