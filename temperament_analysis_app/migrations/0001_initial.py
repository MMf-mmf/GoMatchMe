# Generated by Django 5.1.2 on 2024-12-03 20:31

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TemperamentQuestion',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('question_text', models.TextField()),
                ('category', models.CharField(choices=[('E_I', 'Extroversion/Introversion'), ('S_N', 'Sensing/Intuition'), ('T_F', 'Thinking/Feeling'), ('J_P', 'Judging/Perceiving')], max_length=3)),
                ('active', models.BooleanField(default=True, help_text='Whether the question is active or not')),
                ('order', models.IntegerField(default=0, help_text='Controls the order of questions in the test')),
            ],
            options={
                'ordering': ['order', 'created'],
            },
        ),
        migrations.CreateModel(
            name='TemperamentTestCodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('token', models.CharField(help_text='Unique token for access to take a test', max_length=16, unique=True)),
                ('used', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TemperamentQuestionAnswer',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer_text', models.TextField()),
                ('personality_type', models.CharField(choices=[('E', 'Extrovert'), ('I', 'Introvert'), ('S', 'Sensing'), ('N', 'Intuition'), ('T', 'Thinking'), ('F', 'Feeling'), ('J', 'Judging'), ('P', 'Perceiving')], help_text='Personality type associated with this answer', max_length=1)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='temperament_analysis_app.temperamentquestion')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='TestSession',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('extroversion_score', models.FloatField(blank=True, null=True)),
                ('sensing_score', models.FloatField(blank=True, null=True)),
                ('thinking_score', models.FloatField(blank=True, null=True)),
                ('judging_score', models.FloatField(blank=True, null=True)),
                ('temperament_type', models.CharField(blank=True, max_length=4, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('test_authorization_code', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='temperament_analysis_app.temperamenttestcodes')),
                ('user', models.ForeignKey(blank=True, help_text='If the users has a account ect.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestQuestionSubmission',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='temperament_analysis_app.temperamentquestionanswer')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='temperament_analysis_app.temperamentquestion')),
                ('test_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='temperament_analysis_app.testsession')),
            ],
            options={
                'ordering': ['-created'],
                'unique_together': {('question', 'test_session')},
            },
        ),
    ]
